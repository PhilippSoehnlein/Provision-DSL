TODO for provisioning
---------------------

Generell:
  * Package: installer attribute OS-X: port, Ubuntu: apt, aptitute
             Provision::DSL::Installer::Port | Apt | Aptitude | ...
             Methoden: latest_version, installed_version, install(version)

  * Befehlsausführung

    User / Ausführung | keine Angabe | anderer User     | root
    ------------------+--------------+------------------+-------------------
    normal            | normal       | N/A              | N/A
    kann sudo         | normal       | sudo -n -u x ... | su - x -c ... / sudo
    root              | normal       | sudo -n -u x ... | normal


Erweiterbarkeit:
  Perl->Xxx( ...)
    * zur Laufzeit via AUTOLOAD Modul Perl::Xxx nachladen
    * als Kind zu Perl hinzufügen

_Ubuntu::Package
  * aptitude meldet keine Fehler beim Installieren
  * --> Test nach der Installation erforderlich.

Config:
  * cpan_mirror option starts a CPAN::Mirror::Server::HTTP server
  * remove environment

Execute:
  * cwd attribute

Perlbrew:
  * beim Installieren: laufen lassen von local/bin/perlbrew self-install

Service:
  * reload() feststellen.
    Idee: Prozess-Alter vs. config-file(s)
    problematisch, wenn sich das dahinter sitzende Script geändert habt

new Entities:
  * Link (path, link_to)
  * Cron (path, arguments, environment)
  * Perl_Modules (name-->local_lib_dir, perl, cpanm, mirror, installdeps, install)

Provision:
  * -f switch: alle Entities sind outdated
  * --debug pass thru oder --trace ?
  * bei -v: stdout bei Execute mit anzeigen?

Bedingungen:
  * bisher: only_if, not_if. Kein Einfluß auf State, nur Laufzeit
  * besser:
      Entity:
        state_from -- optional
        current_if
        outdated_if
        missing_if

      Condition:
        Always()
        Never()
        OnDemand()
        ScriptSuccess(script)
        FilePresent(file)
        DirPresent(dir)
        PathPermission(path, perm)
        PathOwner(path, owner)
        PathNewer(path, <dir/*.css>)
  * ODER ABER: (DSL entity keywords anders handhaben 'wantarray'...)
      Always Entity ...;
      Never Entity ...;
      With ... Entity ...;

Idea:
  * How to handle dir lists?
      - { path, permission, user, group }
      - Object ???
