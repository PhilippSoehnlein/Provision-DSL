TODO for provisioning
---------------------

Generell:
  * Package: installer attribute OS-X: port, Ubuntu: apt, aptitute
             Provision::DSL::Installer::Port | Apt | Aptitude | ...
             Methoden: latest_version, installed_version, install(version)

  * Befehlsausf체hrung

    User / Ausf체hrung | keine Angabe | anderer User     | root
    ------------------+--------------+------------------+-------------------
    normal            | normal       | N/A              | N/A
    kann sudo         | normal       | sudo -n -u x ... | su - x -c ... / sudo
    root              | normal       | sudo -n -u x ... | normal


_Ubuntu::Package
  * aptitude meldet keine Fehler beim Installieren
  * --> Test nach der Installation erforderlich.

Config:
  * cpan_mirror option starts a CPAN::Mirror::Server::HTTP server
  * remove environment

Execute:
  * cwd attribute

Perlbrew:
  * beim Installieren: laufen lassen von local/bin/perlbrew self-install

Service:
  * reload() feststellen.
    Idee: Prozess-Alter vs. config-file(s)
    problematisch, wenn sich das dahinter sitzende Script ge채ndert habt

Entities: (entities immer Plattformunabh채ngig)
  * Dir (path)
    DirExists --> Dir --> MkDir, Chown, Chmod, Rsync, Dir*
  * Execute (path, arguments)
    Always --> Execute --> Execute
  * File (path)
    FileExists --> File --> Touch, Chown, Chmod, Content, Patch
  * Link (path, link_to)
    LinkExists --> Link --> Link
  * Cron (path, arguments, environment)
    PatchNeeded --> Cron --> Patch
  * Perl_Modules (name-->local_lib_dir, perl, cpanm, mirror, installdeps, install)

Provision:
  * -f switch: alle Entities sind outdated
  * --debug pass thru oder --trace ?
  * bei -v: stdout bei Execute mit anzeigen?
  * logging in ~/.provision/log/...

Installer:
  Suchreihenfolge: Installer::_OX::Xxx, Installer::Xxx
  bzw: Installer::_OX::Privileged::Xxx, Installer::Privileged::Xxx
  * Null
  * MkDir
  * Touch
  * Link
  * Privileged::Chown
  * Privileged::Chmod
  * InstallPerlbrew
  * Rsync
  * Patch
  * Xxx::User
  * Xxx::Group
  * Ubuntu::Aptitude
  * OSX::Macport
  * Xxx::Service
  * Execute

Inspector:
  Suchreihenfolge: Inspector::_OX::Xxx, Inspector::Xxx
  * Always
  * Never
  * PathExists --> entity->path
  *   DirExists
  *   FileExists
  *   LinkExists
  *   PathPermission --> entity->path, entity->permission
  *   PathOwner -->entity->path, entity->user/group
  *   PathAge -->entity->path, timestamp/other files
  * ProcessAge -->entity->pid, timestamp/other files
  * ExecuteSuccess -->entity->path
  * PatchNeeded
  * ContentEqual
  * Rsync
  * XXX::UserExists
  * XXX::GroupExists
  * Ubuntu::Dpkg
  * OSX::Macport
  * XXX::Service

      Condition:
        Always()
        Never()
        OnDemand()
        ScriptSuccess(script)
        FilePresent(file)
        DirPresent(dir)
        PathPermission(path, perm)
        PathOwner(path, owner)
        PathNewer(path, <dir/*.css>)
