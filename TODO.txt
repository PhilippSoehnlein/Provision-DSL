TODOs
-----

* better info messages when -vv is set (->log_info(...))

* Rsync operations which "preserve timestamp" make decisions fail which
  find "old" processes. Must revert.
  BUT: how to handle files with important time stamps like Templates? (ZIP?)

* P::D::Command --> env seems to fail, at least under Linux. must check.

* Path::Class depends on File::Spec 3.26 which is not pure perl and not available
  on legacy target platforms. Find a way to live without.

* bessere Fehlermeldungen einbauen. Optimalerweise im Log mitschreiben.

* etwas wie "Tasks" einführen. Haupt-Programm ist Task "provision"
  $entity->task bereits vorhanden. Liste von Tasks
  
  $app->... noch notwendig.
  
  Attribut "task" bei Entity. Normal: ignorieren
      Entity name => { ..., task => 'maintenance' };
  
  Arten einer Task-Ausführung (= default):
    - ignorieren   "-"      (default bei allem außer 'provision')
    - installieren "+"      (default bei 'provision')
    - alleine      "="      (default bei 'provision')
    - entfernen    "no-"    (kein default, nur bei +,= sinnvoll)
  
  Kommandozeile:
    ... -- no-maintenance               # impliziert "="
    ... -- +db_migration +another -xxx
    ... -- -cron
    ... -t no-maintenance
    ... -t maintenance
    ... -t +db_migration -t +another -t -xxx
    ... -t -cron

* Status-Abfrage:
    --status | -s  --> listet nur auf, macht nix. Ein Status pro Task

File::Zglob will Perl 5.8.8 haben -- sollte aber auch mit 5.8.0 gehen.
--> evtl. Ersatz dafür selbst machen.
    - zglob >> regex
    - $dir->traverse(regex)

CPAN
  * lokalen CPAN Server starten / Proxy ???

_Ubuntu::Package
  * aptitude meldet keine Fehler beim Installieren
  * --> Test nach der Installation erforderlich.

Perlbrew:
  * beim Installieren: laufen lassen von local/bin/perlbrew self-install

Provision:
  * -f switch: alle Entities sind outdated
  * --debug pass thru oder --trace ?

Entity::Cron
  Cron '/path/to/executable' => {
        minutes         => 11, # singular/plural, scalar/arrayref erlaubt.
        hours           => [5,6,7],
        days_of_week    => [1,2],
        months          => [1..12],
        days_of_month   => '*/2',

        path            => '/path/to/executable', # default: name
        arguments       => [ ... ],
  };

  * wenn User === root ==> /etc/crontab, sonst crontab -e
  * jeder Eintrag wird mit einem Kommentar eingeleitet, enthält config name
    # autocreated by Provision::DSL (hrko dev) -- do not edit
  * Einträge kommen ganz am Anfang aber in jedem Fall alle
    zu einer Config gehörenden in einem Block.

