=head1 NAME

Provision::DSL::Manual::Remote - what happens at the remote machine

=head1 METHOD OF EXECUTION

=head2 Preparations

Before the script can run on the remote machine, the local machine has to
prepare all needed files into a temporary directory. The directory is named
".provision" with the name-value from the config file appended.

The directory typically has the following layout:

    .provision_some_name/
      |
      +-- bin/                  -- misc binaries which may be needed
      |     |
      |     +-- install.perlbrew.sh
      |     
      +-- lib/
      |     |
      |     +-- perl5/          -- all perl modules needed remote
      |
      +-- log/                  -- log files copied back to local
      |
      +-- provision.pl          -- the script running remote
      |
      +-- resources/            -- optional resources for provisioning
      |
      +-- rsyncd.conf           -- config file for local rsync daemon

=head2 Daemons

After all needed files have been collected, an rsync daemon is started on the
local machine using the config file from the temporary directory. The rsync
daemon supports a read-only module "local" pointing to the ".provision*"
directory listed above and a module "log" allowing write-access to the "log"
subdirectory and will be used after the provisioning process to write back all
collected log files whoever the user creating them was.

The daemon listens to the port '2873' on the loopback interface. The port can
be customized in the "local" and "remote" section of the config file for
either of the two sides.

It is planned, to launch another daemon providing either a proxy to a CPAN
Server or providing a prepared CPAN mirror. It will probably listen on port
2080.

=head2 Connecting to the Remote machine

Basically the ssh connection looks like this shell command. It is split
into several lines here to be readable.

    ssh some_user@hostname
        export PERL5LIB='$HOME/.provision_XXX/lib/perl5'
        rsync -r rsync://127.0.0.1:2873/local $HOME/.provision_XXX/
        perl $HOME/.provision_XXX/provision.pl
        ### TODO: rsync log/ back to local

Some details are omitted and almost every part is customizable in the
"remote" section of the config file.

=head2 Running the Provision Script

The provision script will get all required libraries and (hopefully) run on
every perl starting version 5.8.

Depending on the operation running on the remote machine, root provileges
may be required. `sudo -n -u root` must be executable for the provisioning
user in this case. Otherwise the whole process will be aborted.

If, however, all provisioning operations can get executed by the provisioning
user, no further privileges will get aquired and the installation process
will not abort if the `sudo` operation above is not possible.

=head1 AUTHOR

Wolfgang Kinkeldei, E<lt>wolfgang@kinkeldei.deE<gt>

=head1 LICENSE

This library is free software. You can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
